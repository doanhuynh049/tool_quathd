server.modules = (
    "mod_access",
    "mod_redirect",
    "mod_rewrite",
    "mod_fastcgi",
    "mod_alias",
	"mod_auth"
)
# Server Error page
server.errorfile-prefix = "/opt/rec3/www/error-"
server.error-handler-404 = "/opt/rec3/www/error-404.html"

# mimetype mapping

mimetype.assign             = (
  ".pdf"          =>      "application/pdf",
  ".sig"          =>      "application/pgp-signature",
  ".spl"          =>      "application/futuresplash",
  ".class"        =>      "application/octet-stream",
  ".ps"           =>      "application/postscript",
  ".torrent"      =>      "application/x-bittorrent",
  ".dvi"          =>      "application/x-dvi",
  ".gz"           =>      "application/x-gzip",
  ".pac"          =>      "application/x-ns-proxy-autoconfig",
  ".swf"          =>      "application/x-shockwave-flash",
  ".tar.gz"       =>      "application/x-tgz",
  ".tgz"          =>      "application/x-tgz",
  ".tar"          =>      "application/x-tar",
  ".zip"          =>      "application/zip",
  ".mp3"          =>      "audio/mpeg",
  ".m3u"          =>      "audio/x-mpegurl",
  ".wma"          =>      "audio/x-ms-wma",
  ".wax"          =>      "audio/x-ms-wax",
  ".ogg"          =>      "application/ogg",
  ".wav"          =>      "audio/x-wav",
  ".gif"          =>      "image/gif",
  ".jar"          =>      "application/x-java-archive",
  ".jpg"          =>      "image/jpeg",
  ".jpeg"         =>      "image/jpeg",
  ".png"          =>      "image/png",
  ".xbm"          =>      "image/x-xbitmap",
  ".xpm"          =>      "image/x-xpixmap",
  ".xwd"          =>      "image/x-xwindowdump",
  ".css"          =>      "text/css",
  ".html"         =>      "text/html",
  ".htm"          =>      "text/html",
  ".js"           =>      "text/javascript",
  ".asc"          =>      "text/plain",
  ".c"            =>      "text/plain",
  ".cpp"          =>      "text/plain",
  ".log"          =>      "text/plain",
  ".conf"         =>      "text/plain",
  ".text"         =>      "text/plain",
  ".txt"          =>      "text/plain",
  ".dtd"          =>      "text/xml",
  ".xml"          =>      "text/xml",
  ".mpeg"         =>      "video/mpeg",
  ".mpg"          =>      "video/mpeg",
  ".mov"          =>      "video/quicktime",
  ".qt"           =>      "video/quicktime",
  ".avi"          =>      "video/x-msvideo",
  ".asf"          =>      "video/x-ms-asf",
  ".asx"          =>      "video/x-ms-asf",
  ".wmv"          =>      "video/x-ms-wmv",
  ".bz2"          =>      "application/x-bzip",
  ".tbz"          =>      "application/x-bzip-compressed-tar",
  ".tar.bz2"      =>      "application/x-bzip-compressed-tar",
  # default mime type
  ""              =>      "application/octet-stream",
 )


server.document-root  = "/tmp/www/"
server.upload-dirs    = ("/var/log")
server.errorlog       = "/var/log/lighttpd_error.log"
server.pid-file       = "/var/run/lighttpd.pid"
#server.username      = "lighttpd"
#server.groupname     = "lighttpd"
server.port           = 80
index-file.names      = ( "index.php", "index.html",
                          "index.htm", "default.htm",
                          "LocalApp.fcgi", "RemoteApp.fcgi" )
url.access-deny       = ( "~", ".inc" )
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )

auth.backend          = "htdigest"
auth.backend.htdigest.userfile = "/opt/rec3/conf/lighttpdpassword"

include "/tmp/lighttpd.inc"

$HTTP["url"] =~ "^/remote/" {
	url.rewrite-once = ("/webapp/index.html" => "/remote",
						"^/remote/([0-9]+)/([0-9]+)/play\.m3u8$" => "/remote/RemoteApp.fcgi?CMD=GetM3u8&sessionID=$1&channel=$2&filename=play.m3u8",
						"^/remote/([0-9]+)/([0-9]+)/(.*)\.ts$" => "/remote/RemoteApp.fcgi?CMD=GetTs&sessionID=$1&channel=$2&filename=$3.ts",
						"^/remote/([0-9]+)/([0-9]+)/([0-9]+)\.jpg$" => "/remote/RemoteApp.fcgi?CMD=GetJpeg&sessionID=$1&channel=$2&filename=$3.jpg",)
	$HTTP["querystring"] !~ "CMD=(GetM3u8|GetTs|GetJpeg)"  {
		auth.require          = ( "" =>
			(
				"method"  => "digest",
				"realm"   => "login",
				"require" => "valid-user"
			)
		)
	}
}

$HTTP["url"] =~ "^/webset/" {
    auth.require          = ( "" =>
      (
        "method"  => "digest",
        "realm"   => "login",
        "require" => "valid-user"
      )
    )
   dir-listing.activate = "enable"
   server.errorfile-prefix = "/tmp/www/webset/errors/settingError-"
}

fastcgi.server = (
    "/LocalApp.fcgi" => ((
        "bin-path"  => "/opt/rec3/bin/LocalApp.fcgi",
        "allow-x-send-file" => "enable",
        "socket" => "/tmp/LocalApp.fcgi.socket",
        "min-procs" => 1,
        "max-procs" => 1,
        "idle_timeout" => 0,
        "check-local" => "disable",
    )),
    "/remote/RemoteApp.fcgi" => ((
        "bin-path"  => "/opt/rec3/bin/RemoteApp.fcgi",
        "allow-x-send-file" => "enable",
        "socket" => "/tmp/RemoteApp.fcgi.socket",
        "min-procs" => 1,
        "max-procs" => 1,
        "idle_timeout" => 0,
        "check-local" => "disable",
    )),
    "/webset/RemoteApp.fcgi" => ((
        "bin-path"  => "/opt/rec3/bin/RemoteApp.fcgi",
        "allow-x-send-file" => "enable",
        "socket" => "/tmp/RemoteApp.fcgi.socket",
        "min-procs" => 1,
        "max-procs" => 1,
        "idle_timeout" => 0,
        "check-local" => "disable",
    ))
)
# Get configuration file from read/write file system.
alias.url = (	"/remote/config/" => "/opt/rec3/conf/remote/config/"
)

#include_shell "/usr/share/lighttpd/create-mime.assign.pl"
#include_shell "/usr/share/lighttpd/include-conf-enabled.pl"

